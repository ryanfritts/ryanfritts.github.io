/*   New start ! w/ changes ... 
	HTML5 Reset :: style.css
	----------------------------------------------------------
	We have learned much from/been inspired by/taken code where offered from:
	
	Eric Meyer					:: http://ericmeyer.com
	HTML5 Doctor				:: http://html5doctor.com
	and the HTML5 Boilerplate	:: http://html5boilerplate.com
	
-------------------------------------------------------------------------------*/
/* Let's default this puppy out
-------------------------------------------------------------------------------*/
html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, hgroup, menu, nav, section, menu, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

article, aside, figure, footer, header, hgroup, nav, section {
  display: block;
}

/* Responsive images and other embedded objects
   Note: keeping IMG here will cause problems if you're using foreground images as sprites, like, say for Google Maps custom placemarkers. 
   There has been a report of problems with standard Google maps as well, but we haven't been able to duplicate or diagnose the issue. */
img,
object,
embed {
  max-width: 100%;
}

/* force a vertical scrollbar to prevent a jumpy page */
html {
  overflow-y: scroll;
}

/* we use a lot of ULs that aren't bulleted. 
	don't forget to restore the bullets within content. */
ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

del {
  text-decoration: line-through;
}

abbr[title], dfn[title] {
  border-bottom: 1px dotted black;
  cursor: help;
}

/* tables still need cellspacing="0" in the markup */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

th {
  font-weight: bold;
  vertical-align: bottom;
}

td {
  font-weight: normal;
  vertical-align: top;
}

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #cccccc;
  margin: 1em 0;
  padding: 0;
}

input, select {
  vertical-align: middle;
}

pre {
  white-space: pre;
  /* CSS2 */
  white-space: pre-wrap;
  /* CSS 2.1 */
  white-space: pre-line;
  /* CSS 3 (and 2.1 as well, actually) */
  word-wrap: break-word;
  /* IE */
}

input[type="radio"] {
  vertical-align: text-bottom;
}

input[type="checkbox"] {
  vertical-align: bottom;
  *vertical-align: baseline;
}

.ie6 input {
  vertical-align: text-bottom;
}

select, input, textarea {
  font: 99% sans-serif;
}

table {
  font-size: inherit;
  font: 100%;
}

/* Accessible focus treatment
	people.opera.com/patrickl/experiments/keyboard/test */
a:hover, a:active {
  outline: none;
}

small {
  font-size: 85%;
}

strong, th {
  font-weight: bold;
}

td, td img {
  vertical-align: top;
}

/* Make sure sup and sub don't screw with your line-heights
	gist.github.com/413930 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* standardize any monospaced elements */
pre, code, kbd, samp {
  font-family: monospace, sans-serif;
}

/* hand cursor on clickable elements */
.clickable,
label,
input[type=button],
input[type=submit],
button {
  cursor: pointer;
}

/* Webkit browsers add a 2px margin outside the chrome of form elements */
button, input, select, textarea {
  margin: 0;
}

/* make buttons play nice in IE */
button {
  width: auto;
  overflow: visible;
}

/* scale images in IE7 more attractively */
.ie7 img {
  -ms-interpolation-mode: bicubic;
}

/* prevent BG image flicker upon hover */
.ie6 html {
  filter: expression(document.execCommand("BackgroundImageCache", false, true));
}

/* let's clear some floats */
.clearfix:before, .clearfix:after {
  content: "\0020";
  display: block;
  height: 0;
  overflow: hidden;
}

.clearfix:after {
  clear: both;
}

.clearfix {
  zoom: 1;
}

/* Ok, this is where the fun starts.
-------------------------------------------------------------------------------*/
@font-face {
  font-family: 'GarogierRegular';
  src: url("../assets/Garogier_unhinted-webfont.eot");
  src: url("../assets/Garogier_unhinted-webfont.eot?#iefix") format("embedded-opentype"), url("../assets/Garogier_unhinted-webfont.woff") format("woff"), url("../assets/Garogier_unhinted-webfont.ttf") format("truetype"), url("../assets/Garogier_unhinted-webfont.svg#GarogierRegular") format("svg");
  font-weight: normal;
  font-style: normal;
}

/* new Linux- and Windows-friendly sans-serif font stack: http://mky.be/fontstack */
body {
  font: 13px Helmet, Freesans, sans-serif;
}

/* using local fonts? make sure to read up on Paul Irish's 
	Bulletproof @font-face syntax: http://mky.be/font-face/bulletproof/ */
/* we like off-black for text */
body, select, input, textarea {
  color: #333;
  -webkit-text-size-adjust: 100%;
  /* Stops Mobile Safari from auto-adjusting font-sizes */
}

a {
  color: #03f;
}

a:hover {
  color: #69f;
}

/* Custom text-selection colors (remove any text shadows: twitter.com/miketaylr/status/12228805301) */
::-moz-selection {
  background: #fcd700;
  color: #fff;
  text-shadow: none;
}

::selection {
  background: #fcd700;
  color: #fff;
  text-shadow: none;
}

/*	j.mp/webkit-tap-highlight-color */
a:link {
  -webkit-tap-highlight-color: #fcd700;
}

ins {
  background-color: #fcd700;
  color: #000;
  text-decoration: none;
}

mark {
  background-color: #fcd700;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

/*--------------  wrapper  ---------------------------------*/
.wrapper_all {
  width: 804px;
  margin: 0 auto;
}

.share {
  float: right;
  padding: 0 10px 0 0;
}

/*--------------  header  ---------------------------------*/
header {
  background: url(../assets/img/me.gif) no-repeat scroll 500px 0 transparent;
  width: 100%;
  margin: 0 20px 500px 20px;
}

header a {
  text-decoration: none;
}

header h1 {
  margin: 250px 0 0 0;
  font-size: 3.5em;
  color: #666;
  text-shadow: -1px -2px 1px black;
}

/*--------------  nav  ---------------------------------*/
header nav {
  margin: 20px 48px;
}

header nav ol {
  list-style-type: upper-roman;
}

header nav a {
  margin: 24px;
  font-size: 1.5em;
  color: #999;
}

header nav a.alt {
  color: tan;
  padding: 8px 0;
}

header nav a.alt:hover {
  text-decoration: underline;
}

/*--------------  article  ---------------------------------*/
.article {
  margin: 0 0 50px 0;
}

.content__header {
  float: left;
  width: 804px;
  height: 280px;
  margin: 50px 0 70px 0;
}

[class^=header__title] {
  width: 540px;
  height: 100%;
  padding: 0;
  text-indent: -400%;
  /*	
  	border-bottom:10px solid #999;
  	text-shadow: -2px 2px 3px #999;
  	
  	-webkit-border-radius: 0 0 30px 30px;
  	-moz-border-radius: 0 0 30px 30px;
  	-o-border-radius: 0 0 30px 30px;
  	border-radius: 0 0 50px 50px;
  	
  	-webkit-transform: skew(-30deg,-10deg);
  	-moz-transform: skew(-30deg,-10deg);
  	-o-transform: skew(-30deg,-10deg);
  
  	font-size:3em;
  */
}

.header__title--artist {
  background: url(../assets/img/artist.gif) no-repeat scroll 10px 60px transparent;
}

.header__title--developer {
  background: url(../assets/img/developer.gif) no-repeat scroll 10px 45px transparent;
}

.header__title--entrepreneur {
  background: url(../assets/img/entrepreneur.gif) no-repeat scroll 10px 90px transparent;
}

.header__title--manager {
  background: url(../assets/img/manager.gif) no-repeat scroll 10px 70px transparent;
}

.header__title--writer {
  background: url(../assets/img/writer.gif) no-repeat scroll 10px 35px transparent;
}

.header__title--adventurer {
  background: url(../assets/img/adventurer.gif) no-repeat scroll 5px 80px transparent;
}

.header__title--academic {
  background: url(../assets/img/academic.gif) no-repeat scroll 10px 50px transparent;
}

[class*="figure"] {
  float: right;
  width: 220px;
  height: 273px;
  text-indent: -400%;
  margin: -225px 0 0 0;
  -webkit-transform: rotate(2deg);
  -moz-transform: rotate(2deg);
  -o-transform: rotate(2deg);
  /*	
  	-webkit-border-radius: 20px 20px 20px 20px;
  	-moz-border-radius: 20px 20px 20px 20px;
  	-o-border-radius: 20px 20px 20px 20px;
  	border-radius: 20px 20px 20px 20px;
  
  	-webkit-box-shadow: 0 1px 4px rgba(0,0,0,.3);
  	-moz-box-shadow: 0 1px 4px rgba(0,0,0,.3);
  	-o-box-shadow: 0 1px 4px rgba(0,0,0,.3);
  	box-shadow: 0 1px 4px rgba(0,0,0,.3);
  */
}

.figure--artist {
  background: url(../assets/img/the_artist.gif) no-repeat scroll -25px -30px transparent;
}

.figure--developer {
  background: url(../assets/img/the_developer.gif) no-repeat scroll 0 0 transparent;
  width: 250px;
}

.figure--entrepreneur {
  background: url(../assets/img/the_entrepreneur.gif) no-repeat scroll 0 0 transparent;
}

.figure--manager {
  background: url(../assets/img/the_manager.gif) no-repeat scroll 0 0 transparent;
}

.figure--writer {
  background: url(../assets/img/the_writer.gif) no-repeat scroll 0 0 transparent;
}

.figure--adventurer {
  background: url(../assets/img/the_adventurer.gif) no-repeat scroll 0 0 transparent;
}

.figure--academic {
  background: url(../assets/img/the_academic.gif) no-repeat scroll 0 0 transparent;
}

[class^=section] {
  float: left;
  width: 252px;
  margin: 20px 24px 0 0;
}
[class^=section]:last-child {
  margin: 20px 0 0 0;
}
[class^=section] h2 {
  margin: 10px 0;
  font-size: 2em;
  text-align: center;
}

.section--primary h2 {
  color: #a44;
}

.section--secondary h2 {
  color: #795;
}

.section--tertiary h2 {
  color: #568;
}

.section__para {
  /*	background: url(../img/rabbit.png) no-repeat scroll 70px 120px transparent; */
  font-family: "GarogierRegular", times, serif;
  font-size: 1.3em;
  line-height: 1.4em;
  letter-spacing: .02em;
  height: 200px;
}
.section__para:first-letter {
  font-size: 4.4em;
  line-height: .6em;
  float: left;
  padding-right: 3px;
}
.section__para img {
  width: 100px;
  height: 100px;
  padding: 0 76px;
}

.article__footer {
  border-bottom: 1px solid red;
  width: 100%;
  font-size: 1em;
  margin: 50px 5px;
  padding: 0 0 7px 0;
}

.nav__link--footer {
  float: left;
  padding: 7px;
  text-decoration: none;
  color: #999;
}

/*--------------  aside  ---------------------------------*/
aside {
  background: url(../assets/img/like.gif) no-repeat scroll 240px 405px transparent;
  width: 100%;
  float: left;
  margin: 70px 0;
  font-size: 1.5em;
  padding: 110px 20px 254px 0;
  text-align: center;
}

aside a {
  text-align: center;
  width: 100%;
  padding: 20px;
  text-decoration: none;
  color: #999;
}

aside h2 {
  margin: 40px 0 0 0;
  text-align: left;
}

aside figure {
  float: left;
  width: 252px;
}

aside figcaption {
  font-size: .5em;
  text-align: center;
}

aside video {
  margin: 20px 0 0 0;
  -webkit-border-radius: 30px 10px 30px 0;
  -moz-border-radius: 30px 10px 30px 0;
  -o-border-radius: 30px 10px 30px 0;
  border-radius: 30px 10px 30px 0;
  border: 1px solid white;
  -webkit-box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), -5px 2px 3px 3px rgba(196, 200, 180, 0.3);
  -moz-box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), -5px 2px 3px 3px rgba(196, 200, 180, 0.3);
  -o-box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), -5px 2px 3px 3px rgba(196, 200, 180, 0.3);
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), -5px 2px 3px 3px rgba(196, 200, 180, 0.3);
}

aside blockquote {
  width: 500px;
  float: left;
  padding: 70px 0 0 4px;
  text-align: center;
  margin: 0;
}

aside blockquote span {
  font-size: .8em;
  font-family: "GarogierRegular", times, serif;
}

/*--------------  footer  ---------------------------------*/
footer {
  float: left;
  width: 100%;
  text-align: right;
}

footer h1 {
  float: left;
  font-family: "GarogierRegular", times, serif;
  font-size: 2em;
}

footer p {
  padding: 3% 10%;
}

/* Print styles!
-------------------------------------------------------------------------------*/
/* Media queries!
-------------------------------------------------------------------------------*/
/*
@media screen and (max-device-width: 480px) {
	
		
}

@media all and (orientation: portrait) {
	
}

@media all and (orientation: landscape) {
	
}
*/
@media (min-width: 480px) and (max-width: 767px) {
  body {
    margin: 0 5px;
    padding: 0;
  }

  .wrapper_all {
    width: 528px;
    margin: 0 5px;
  }

  header {
    background: url(../assets/img/me.gif) no-repeat scroll 225px 80px transparent;
    width: 100%;
    margin: -75px 20px 50px 20px;
  }

  header nav li {
    padding: 5px 0;
  }

  article h1 {
    width: 538px;
    margin: 0 0 0 -12px;
  }

  article figure {
    float: left;
    text-indent: -400%;
    /*	
    		width:220px;
    		height:273px;
    */
    margin: 80px 0 0 276px;
  }

  section {
    float: left;
    width: 250px;
    margin: 20px 18px 0 0;
  }

  aside {
    background: url(../assets/img/like.gif) no-repeat scroll 75px 638px transparent;
  }
}
@media only screen and (max-device-width: 480px) {
  body {
    margin: 0;
    padding: 0;
  }

  .wrapper_all {
    width: 252px;
  }

  header {
    background: url(../assets/img/me.gif) no-repeat scroll 30px 0 transparent;
    width: 100%;
    margin: 0 20px 50px 20px;
  }

  article hgroup {
    width: 252px;
  }

  article figure {
    margin: -100px 0 0 0;
    float: left;
  }

  header nav {
    margin: 30px 20px;
  }

  header nav li {
    padding: 5px 0;
  }

  section.primary {
    margin: 170px 0 0 0;
  }

  article h1#artist {
    background: url(../assets/img/artist-small.gif) no-repeat scroll 10px 60px transparent;
  }

  article h1#developer {
    background: url(../assets/img/developer-small.gif) no-repeat scroll 10px 45px transparent;
  }

  article h1#entrepreneur {
    background: url(../assets/img/entrepreneur-small.gif) no-repeat scroll 10px 90px transparent;
  }

  article h1#manager {
    background: url(../assets/img/manager-small.gif) no-repeat scroll 10px 70px transparent;
  }

  article h1#writer {
    background: url(../assets/img/writer-small.gif) no-repeat scroll 10px 35px transparent;
  }

  article h1#adventurer {
    background: url(../assets/img/adventurer-small.gif) no-repeat scroll 5px 80px transparent;
  }

  article h1#academic {
    background: url(../assets/img/academic-small.gif) no-repeat scroll 10px 50px transparent;
  }

  article footer {
    font-size: .5em;
    margin: 20px 5px;
    padding: 0 0 30px 0;
  }

  article footer a.top {
    background: url(../assets/img/top.gif) no-repeat scroll 3px 8px transparent;
    text-indent: -9999px;
    margin: 5px 0 0 0;
    padding: 18px;
    border: 1px solid #6699ff;
  }

  article footer a {
    float: left;
    padding: 5px;
    text-decoration: none;
    color: #999;
  }

  aside {
    background: url(../assets/img/like-small.gif) no-repeat scroll 20px 740px transparent;
  }

  aside blockquote {
    width: 240px;
  }

  footer {
    text-align: center;
  }

  footer h1 {
    font-size: 1.5em;
  }
}
/**
 * Setup
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * `.brand` is a quick and simple way to apply your brand face and/or color to
 * any element using a handy helper class.
 */
/*------------------------------------*\
    $BASE / constants
\*------------------------------------*/
/**
 * Set up project-specific variables here which are then used throughout your
 * build. These variables are automatically picked up by inuit.css so you should
 * never need to modify any framework code.
 */
/**
 * Debug mode will visually highlight any potential markup/accessibility quirks
 * in the browser. Set to `true` or `false`.
 */
/**
 * Do you want all elements to adopt `box-sizing:border-box;` as per
 * paulirish.com/2012/box-sizing-border-box-ftw ?
 */
/**
 * Would you like to use Adam Whitcroft’s Batch icon font, as per:
 * adamwhitcroft.com/batch ?
 */
/**
 * Base stuff
 */
/**
 * How big would you like round corners to be by default?
 */
/**
 * Responsiveness?
 */
/**
 * Responsive push and pull produce a LOT of code, only turn them on if you
 * definitely need them.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/**
 * Font-sizes (in pixels). Refer to relevant sections for their implementations.
 */
/**
 * English quote marks?
 */
/**
 * If you want English quotes then please do not edit these; they’re only here
 * because Sass needs them.
 */
/**
 * If you need non-English quotes, please alter the following values accordingly:
 */
/**
 * Brand stuff
 */
/**
 * inuit.css will work these next ones out for you.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/*------------------------------------*\
    INUIT.CSS
\*------------------------------------*/
/**
 * 
 * inuitcss.com -- @inuitcss -- @csswizardry
 * 
 */
/**
 * inuit.css acts as a base stylesheet which you should extend with your own
 * theme stylesheet.
 * 
 * inuit.css aims to do the heavy lifting; sorting objects and abstractions,
 * design patterns and fiddly bits of CSS, whilst leaving as much design as
 * possible to you. inuit.css is the scaffolding to your decorator.
 * 
 * This stylesheet is heavily documented and contains lots of comments, please
 * take care to read and refer to them as you build. For further support please
 * tweet at @inuitcss.
 * 
 * Owing to the amount of comments please only ever use minified CSS in
 * production. This file is purely a dev document.
 * 
 * The table of contents below maps to section titles of the same name, to jump
 * to any section simply run a find for $[SECTION-TITLE].
 * 
 * Most objects and abstractions come with a chunk of markup that you should be
 * able to paste into any view to quickly see how the CSS works in conjunction
 * with the correct HTML.
 * 
 * inuit.css is written to this standard: github.com/csswizardry/CSS-Guidelines
 * 
 * LICENSE
 * 
 * Copyright 2012 Harry Roberts
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * Thank you for choosing inuit.css. May your floats remain cleared.
 */
/*------------------------------------*\
    $CONTENTS
\*------------------------------------*/
/**
 * CONTENTS............You’re reading it!
 * WARNING.............Here be dragons!
 * IMPORTS.............Begin importing the sections below
 * 
 * MIXINS..............Super-simple Sass stuff
 * NORMALIZE...........normalize.css
 * RESET...............Set some defaults
 * CLEARFIX............
 * SHARED..............Shared declarations
 * 
 * MAIN................High-level elements like `html`, `body`, etc.
 * HEADINGS............Double-stranded heading hierarchy
 * PARAGRAPHS..........
 * SMALLPRINT..........Smaller text elements like `small`
 * QUOTES..............
 * CODE................
 * LINKS...............
 * LISTS...............
 * IMAGES..............
 * TABLES..............
 * FORMS...............
 * 
 * GRIDS...............Fluid, proportional and nestable grids
 * FLEXBOX.............Crudely emulate flexbox
 * COLUMNS.............CSS3 columns
 * NAV.................A simple abstraction to put a list in horizontal nav mode
 * OPTIONS.............Grouped nav items
 * PAGINATION..........Very stripped back, basic paginator
 * BREADCRUMB..........Simple breadcrumb trail object
 * MEDIA...............Media object
 * MARGINALIA..........Simple marginalia content
 * ISLAND..............Boxed off content
 * BLOCK-LIST..........Blocky lists of content
 * MATRIX..............Gridded lists
 * SPLIT...............A simple split-in-two object
 * THIS-OR-THIS........Options object
 * LINK-COMPLEX........
 * FLYOUT..............Flyout-on-hover object
 * ARROWS..............CSS arrows
 * SPRITE..............Generic spriting element
 * ICON-TEXT...........Icon and text couplings
 * BUTTONS.............
 * LOZENGES............Basic lozenge styles
 * RULES...............Horizontal rules
 * STATS...............Simple stats object
 * GREYBOX.............Wireframing styles
 * BATCH...............Batch icon font
 * 
 * WIDTHS..............Width classes for use alongside the grid system etc.
 * PUSH................Push classes for manipulating grids
 * PULL................Pull classes for manipulating grids
 * BRAND...............Helper class to apply brand treatment to elements
 * HELPER..............A series of helper classes to use arbitrarily
 * DEBUG...............Enable to add visual flags for debugging purposes
 */
/*------------------------------------*\
    $WARNING
\*------------------------------------*/
/*
 * inuit.css, being an OO framework, works in keeping with the open/closed
 * principle. The variables you set previously are now being used throughout
 * inuit.css to style everything we need for a base. Any custom styles SHOULD
 * NOT be added or modified in inuit.css directly, but added via your theme
 * stylesheet as per the open/closed principle:
 * 
 * csswizardry.com/2012/06/the-open-closed-principle-applied-to-css
 * 
 * Try not to edit any CSS beyond this point; if you find you need to do so
 * it is a failing of the framework so please tweet at @inuitcss.
 */
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/**
 * Generic utility styles etc.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 * 
   `@include font-size(10px);`
 * 
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
/**
 * Create vendor-prefixed CSS in one go, e.g.
 * 
   `@include vendor(border-radius, 4px);`
 * 
 */
/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 * 
   .foo{
       @include vendor(animation, shrink 3s);
   }
   
   @include keyframe(shrink){
       from{
           font-size:5em;
       }
   }
 * 
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */
/**
 * Force overly long spans of text to truncate, e.g.:
 * 
   `@include truncate(100%);`
 * 
 * Where `$truncation-boundary` is a united measurement.
 */
/**
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 * 
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 * 
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 * 
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 * 
 * `@include arrow(top, left, red)`
 * 
 * for just a single, red arrow, or:
 * 
 * `@include arrow(bottom, center, red, black)`
 * 
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus: 
 * 
   .foo{
       background-color:#BADA55;
       border:1px solid #ACE;
       @include arrow(top, left, #BADA55, #ACE);
   }
 * 
 */
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 * 
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * 
 * Not using a media query will, naturally, serve styles to all devices.
 * 
 * `@include media-query(palm){ [styles here] }`
 * 
 * We work out your end points for you:
 */
/* normalize.css v2.0.1 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Corrects `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block;
}

/*
 * Corrects `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block;
}

/*
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Addresses styling for `hidden` attribute not present in IE 8/9.
 */
[hidden] {
  display: none;
}

/* ==========================================================================
   Base
   ========================================================================== */
/*
 * 1. Sets default font family to sans-serif.
 * 2. Prevents iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
}

/*
 * Removes default margin.
 */
body {
  margin: 0;
}

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Addresses `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}

/*
 * Improves readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */
/*
 * Addresses `h1` font sizes within `section` and `article` in Firefox 4+,
 * Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
}

/*
 * Addresses styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/*
 * Addresses style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/*
 * Addresses styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic;
}

/*
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/*
 * Corrects font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/*
 * Improves readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

/*
 * Sets consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/*
 * Addresses inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/*
 * Prevents `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * Removes border when inside `a` element in IE 8/9.
 */
img {
  border: 0;
}

/*
 * Corrects overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */
/*
 * Addresses margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid silver;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/*
 * 1. Corrects color not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * 1. Corrects font family not being inherited in all browsers.
 * 2. Corrects font size not being inherited in all browsers.
 * 3. Addresses margins set differently in Firefox 4+, Safari 5, and Chrome
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/*
 * Addresses Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Corrects inability to style clickable `input` types in iOS.
 * 3. Improves usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
 * Re-set default cursor for disabled elements.
 */
button[disabled],
input[disabled] {
  cursor: default;
}

/*
 * 1. Addresses box sizing set to `content-box` in IE 8/9.
 * 2. Removes excess padding in IE 8/9.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * 1. Addresses `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Addresses `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/*
 * Removes inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
 * Removes inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
 * 1. Removes default vertical scrollbar in IE 8/9.
 * 2. Improves readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*------------------------------------*\
    $RESET
\*------------------------------------*/
/**
 * A more considered reset; more of a restart... 
 * As per: csswizardry.com/2011/10/reset-restarted
 */
/**
* Let’s make the box model all nice, shall we…?
*/
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
}

/**
 * The usual...
 */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0;
}

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title], dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
a, u, ins {
  text-decoration: none;
}

/**
 * Apply faux underline via `border-bottom`.
 */
ins {
  border-bottom: 1px solid;
}

/**
 * So that `alt` text is visually offset if images don’t load.
 */
img {
  font-style: italic;
}

/**
 * Give form elements some cursor interactions...
 */
label,
input,
textarea,
button,
select,
option {
  cursor: pointer;
}

.text-input:active,
.text-input:focus,
textarea:active,
textarea:focus {
  cursor: text;
  outline: none;
}

/*------------------------------------*\
    $CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: nicolasgallagher.com/micro-clearfix-hack
 * Extend the clearfix class with Sass to avoid the `.cf` class appearing over
 * and over in your markup.
 */
.cf {
  zoom: 1;
}
.cf:before, .cf:after {
  content: " ";
  display: table;
}
.cf:after {
  clear: both;
}

/*------------------------------------*\
    $SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
/**
 * Base elements
 */
h1, h2, h3, h4, h5, h6, hgroup,
ul, ol, dl,
blockquote, p, address,
table,
fieldset, figure,
pre,
.media,
.island,
.islet {
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
}
.islet h1, .islet h2, .islet h3, .islet h4, .islet h5, .islet h6, .islet hgroup, .islet
ul, .islet ol, .islet dl, .islet
blockquote, .islet p, .islet address, .islet
table, .islet
fieldset, .islet figure, .islet
pre, .islet
.media, .islet
.island, .islet
.islet {
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
}

/**
 * Doubled up `margin-bottom` helper class.
 */
.landmark {
  margin-bottom: 48px;
  margin-bottom: 3rem;
}

/**
 * `hr` elements only take up a few pixels, so we need to give them special
 * treatment regarding vertical rhythm.
 */
hr {
  margin-bottom: 22px;
  margin-bottom: 1.375rem;
}

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once, here.
 */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem;
}

/**
 * Base styles; unclassed HTML elements etc.
 */
/**
 * Objects and abstractions
 * 
 * Single-line comment (//) out any objects you do not need in your project.

   @import "objects/grids";
   @import "objects/flexbox";
   @import "objects/columns";
   @import "objects/nav";
   @import "objects/options";
   @import "objects/pagination";
   @import "objects/breadcrumb";
   @import "objects/media";
   @import "objects/marginalia";
   @import "objects/island";
   @import "objects/block-list";
   @import "objects/matrix";
   @import "objects/split";
   @import "objects/this-or-this";
   @import "objects/link-complex";
   @import "objects/flyout";
   @import "objects/arrows";
   @import "objects/sprite";
   @import "objects/icon-text";
   @import "objects/buttons";
   @import "objects/lozenges";
   @import "objects/rules";
   @import "objects/stats";
   @import "objects/greybox";
   @import "objects/batch";


/**
 * Style trumps; helper and brand classes
 */
/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Sizes in human readable format. These are used in conjunction with other
 * objects and abstractions found in inuit.css, most commonly the grid system
 * and faux flexbox.
 *
 * We have a mixin to generate our widths and their breakpoint-specific
 * variations.
 */
/**
* Whole
*/
.one-whole {
  width: 100%;
}

/**
* Halves
*/
.one-half, .two-quarters, .three-sixths, .four-eighths, .five-tenths, .six-twelfths {
  width: 50%;
}

/**
* Thirds
*/
.one-third, .two-sixths, .four-twelfths {
  width: 33.333%;
}

.two-thirds, .four-sixths, .eight-twelfths {
  width: 66.666%;
}

/**
* Quarters
*/
.one-quarter, .two-eighths, .three-twelfths {
  width: 25%;
}

.three-quarters, .six-eighths, .nine-twelfths {
  width: 75%;
}

/**
* Fifths
*/
.one-fifth, .two-tenths {
  width: 20%;
}

.two-fifths, .four-tenths {
  width: 40%;
}

.three-fifths, .six-tenths {
  width: 60%;
}

.four-fifths, .eight-tenths {
  width: 80%;
}

/**
* Sixths
*/
.one-sixth, .two-twelfths {
  width: 16.666%;
}

.five-sixths, .ten-twelfths {
  width: 83.333%;
}

/**
* Eighths
*/
.one-eighth {
  width: 12.5%;
}

.three-eighths {
  width: 37.5%;
}

.five-eighths {
  width: 62.5%;
}

.seven-eighths {
  width: 87.5%;
}

/**
* Tenths
*/
.one-tenth {
  width: 10%;
}

.three-tenths {
  width: 30%;
}

.seven-tenths {
  width: 70%;
}

.nine-tenths {
  width: 90%;
}

/**
* Twelfths
*/
.one-twelfth {
  width: 8.333%;
}

.five-twelfths {
  width: 41.666%;
}

.seven-twelfths {
  width: 58.333%;
}

.eleven-twelfths {
  width: 91.666%;
}

/**
 * If you have set `$responsive` to ‘true’ in `_vars.scss` then you now have
 * access to these classes. You can define at which breakpoing you’d like an
 * element to be a certain size, e.g.:
 *
 * `<div class="g  one-quarter  lap-one-half  palm-one-whole"> ... </div>`
 *
 * This would create a `div` that, at ‘desktop’ sizes, takes up a quarter of the
 * horizontal space, a half of that space at ‘tablet’ sizes, and goes full width
 * at ‘mobile’ sizes.
 *
 * Demo: jsfiddle.net/inuitcss/WS4Ge
 *
 */
@media only screen and (max-width: 480px) {
  /**
  * Whole
  */
  .palm-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  .palm-one-half, .palm-two-quarters, .palm-three-sixths, .palm-four-eighths, .palm-five-tenths, .palm-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  .palm-one-third, .palm-two-sixths, .palm-four-twelfths {
    width: 33.333%;
  }

  .palm-two-thirds, .palm-four-sixths, .palm-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  .palm-one-quarter, .palm-two-eighths, .palm-three-twelfths {
    width: 25%;
  }

  .palm-three-quarters, .palm-six-eighths, .palm-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  .palm-one-fifth, .palm-two-tenths {
    width: 20%;
  }

  .palm-two-fifths, .palm-four-tenths {
    width: 40%;
  }

  .palm-three-fifths, .palm-six-tenths {
    width: 60%;
  }

  .palm-four-fifths, .palm-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  .palm-one-sixth, .palm-two-twelfths {
    width: 16.666%;
  }

  .palm-five-sixths, .palm-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  .palm-one-eighth {
    width: 12.5%;
  }

  .palm-three-eighths {
    width: 37.5%;
  }

  .palm-five-eighths {
    width: 62.5%;
  }

  .palm-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  .palm-one-tenth {
    width: 10%;
  }

  .palm-three-tenths {
    width: 30%;
  }

  .palm-seven-tenths {
    width: 70%;
  }

  .palm-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  .palm-one-twelfth {
    width: 8.333%;
  }

  .palm-five-twelfths {
    width: 41.666%;
  }

  .palm-seven-twelfths {
    width: 58.333%;
  }

  .palm-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
  * Whole
  */
  .lap-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  .lap-one-half, .lap-two-quarters, .lap-three-sixths, .lap-four-eighths, .lap-five-tenths, .lap-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  .lap-one-third, .lap-two-sixths, .lap-four-twelfths {
    width: 33.333%;
  }

  .lap-two-thirds, .lap-four-sixths, .lap-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  .lap-one-quarter, .lap-two-eighths, .lap-three-twelfths {
    width: 25%;
  }

  .lap-three-quarters, .lap-six-eighths, .lap-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  .lap-one-fifth, .lap-two-tenths {
    width: 20%;
  }

  .lap-two-fifths, .lap-four-tenths {
    width: 40%;
  }

  .lap-three-fifths, .lap-six-tenths {
    width: 60%;
  }

  .lap-four-fifths, .lap-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  .lap-one-sixth, .lap-two-twelfths {
    width: 16.666%;
  }

  .lap-five-sixths, .lap-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  .lap-one-eighth {
    width: 12.5%;
  }

  .lap-three-eighths {
    width: 37.5%;
  }

  .lap-five-eighths {
    width: 62.5%;
  }

  .lap-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  .lap-one-tenth {
    width: 10%;
  }

  .lap-three-tenths {
    width: 30%;
  }

  .lap-seven-tenths {
    width: 70%;
  }

  .lap-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  .lap-one-twelfth {
    width: 8.333%;
  }

  .lap-five-twelfths {
    width: 41.666%;
  }

  .lap-seven-twelfths {
    width: 58.333%;
  }

  .lap-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (max-width: 1023px) {
  /**
  * Whole
  */
  .portable-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  .portable-one-half, .portable-two-quarters, .portable-three-sixths, .portable-four-eighths, .portable-five-tenths, .portable-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  .portable-one-third, .portable-two-sixths, .portable-four-twelfths {
    width: 33.333%;
  }

  .portable-two-thirds, .portable-four-sixths, .portable-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  .portable-one-quarter, .portable-two-eighths, .portable-three-twelfths {
    width: 25%;
  }

  .portable-three-quarters, .portable-six-eighths, .portable-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  .portable-one-fifth, .portable-two-tenths {
    width: 20%;
  }

  .portable-two-fifths, .portable-four-tenths {
    width: 40%;
  }

  .portable-three-fifths, .portable-six-tenths {
    width: 60%;
  }

  .portable-four-fifths, .portable-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  .portable-one-sixth, .portable-two-twelfths {
    width: 16.666%;
  }

  .portable-five-sixths, .portable-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  .portable-one-eighth {
    width: 12.5%;
  }

  .portable-three-eighths {
    width: 37.5%;
  }

  .portable-five-eighths {
    width: 62.5%;
  }

  .portable-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  .portable-one-tenth {
    width: 10%;
  }

  .portable-three-tenths {
    width: 30%;
  }

  .portable-seven-tenths {
    width: 70%;
  }

  .portable-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  .portable-one-twelfth {
    width: 8.333%;
  }

  .portable-five-twelfths {
    width: 41.666%;
  }

  .portable-seven-twelfths {
    width: 58.333%;
  }

  .portable-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 1024px) {
  /**
  * Whole
  */
  .desk-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  .desk-one-half, .desk-two-quarters, .desk-three-sixths, .desk-four-eighths, .desk-five-tenths, .desk-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  .desk-one-third, .desk-two-sixths, .desk-four-twelfths {
    width: 33.333%;
  }

  .desk-two-thirds, .desk-four-sixths, .desk-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  .desk-one-quarter, .desk-two-eighths, .desk-three-twelfths {
    width: 25%;
  }

  .desk-three-quarters, .desk-six-eighths, .desk-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  .desk-one-fifth, .desk-two-tenths {
    width: 20%;
  }

  .desk-two-fifths, .desk-four-tenths {
    width: 40%;
  }

  .desk-three-fifths, .desk-six-tenths {
    width: 60%;
  }

  .desk-four-fifths, .desk-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  .desk-one-sixth, .desk-two-twelfths {
    width: 16.666%;
  }

  .desk-five-sixths, .desk-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  .desk-one-eighth {
    width: 12.5%;
  }

  .desk-three-eighths {
    width: 37.5%;
  }

  .desk-five-eighths {
    width: 62.5%;
  }

  .desk-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  .desk-one-tenth {
    width: 10%;
  }

  .desk-three-tenths {
    width: 30%;
  }

  .desk-seven-tenths {
    width: 70%;
  }

  .desk-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  .desk-one-twelfth {
    width: 8.333%;
  }

  .desk-five-twelfths {
    width: 41.666%;
  }

  .desk-seven-twelfths {
    width: 58.333%;
  }

  .desk-eleven-twelfths {
    width: 91.666%;
  }
}
/* endif */
/*------------------------------------*\
    $PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
/**
 * Not a particularly great selector, but the DRYest way to do things.
 */
[class*="push--"] {
  position: relative;
}

/**
 * Whole
 */
.push--one-whole {
  left: 100%;
}

/**
 * Halves
 */
.push--one-half, .push--two-quarters, .push--three-sixths, .push--four-eighths, .push--five-tenths, .push--six-twelfths {
  left: 50%;
}

/**
 * Thirds
 */
.push--one-third, .push--two-sixths, .push--four-twelfths {
  left: 33.333%;
}

.push--two-thirds, .push--four-sixths, .push--eight-twelfths {
  left: 66.666%;
}

/**
 * Quarters
 */
.push--one-quarter, .push--two-eighths, .push--three-twelfths {
  left: 25%;
}

.push--three-quarters, .push--six-eighths, .push--nine-twelfths {
  left: 75%;
}

/**
 * Fifths
 */
.push--one-fifth, .push--two-tenths {
  left: 20%;
}

.push--two-fifths, .push--four-tenths {
  left: 40%;
}

.push--three-fifths, .push--six-tenths {
  left: 60%;
}

.push--four-fifths, .push--eight-tenths {
  left: 80%;
}

/**
 * Sixths
 */
.push--one-sixth, .push--two-twelfths {
  left: 16.666%;
}

.push--five-sixths, .push--ten-twelfths {
  left: 83.333%;
}

/**
 * Eighths
 */
.push--one-eighth {
  left: 12.5%;
}

.push--three-eighths {
  left: 37.5%;
}

.push--five-eighths {
  left: 62.5%;
}

.push--seven-eighths {
  left: 87.5%;
}

/**
 * Tenths
 */
.push--one-tenth {
  left: 10%;
}

.push--three-tenths {
  left: 30%;
}

.push--seven-tenths {
  left: 70%;
}

.push--nine-tenths {
  left: 90%;
}

/**
 * Twelfths
 */
.push--one-twelfth {
  left: 8.333%;
}

.push--five-twelfths {
  left: 41.666%;
}

.push--seven-twelfths {
  left: 58.333%;
}

.push--eleven-twelfths {
  left: 91.666%;
}

/* endif */
/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items over to the right by certain amounts.
 */
/**
 * Not a particularly great selector, but the DRYest way to do things.
 */
[class*="pull--"] {
  position: relative;
}

/**
 * Whole
 */
.pull--one-whole {
  right: 100%;
}

/**
 * Halves
 */
.pull--one-half, .pull--two-quarters, .pull--three-sixths, .pull--four-eighths, .pull--five-tenths, .pull--six-twelfths {
  right: 50%;
}

/**
 * Thirds
 */
.pull--one-third, .pull--two-sixths, .pull--four-twelfths {
  right: 33.333%;
}

.pull--two-thirds, .pull--four-sixths, .pull--eight-twelfths {
  right: 66.666%;
}

/**
 * Quarters
 */
.pull--one-quarter, .pull--two-eighths, .pull--three-twelfths {
  right: 25%;
}

.pull--three-quarters, .pull--six-eighths, .pull--nine-twelfths {
  right: 75%;
}

/**
 * Fifths
 */
.pull--one-fifth, .pull--two-tenths {
  right: 20%;
}

.pull--two-fifths, .pull--four-tenths {
  right: 40%;
}

.pull--three-fifths, .pull--six-tenths {
  right: 60%;
}

.pull--four-fifths, .pull--eight-tenths {
  right: 80%;
}

/**
 * Sixths
 */
.pull--one-sixth, .pull--two-twelfths {
  right: 16.666%;
}

.pull--five-sixths, .pull--ten-twelfths {
  right: 83.333%;
}

/**
 * Eighths
 */
.pull--one-eighth {
  right: 12.5%;
}

.pull--three-eighths {
  right: 37.5%;
}

.pull--five-eighths {
  right: 62.5%;
}

.pull--seven-eighths {
  right: 87.5%;
}

/**
 * Tenths
 */
.pull--one-tenth {
  right: 10%;
}

.pull--three-tenths {
  right: 30%;
}

.pull--seven-tenths {
  right: 70%;
}

.pull--nine-tenths {
  right: 90%;
}

/**
 * Twelfths
 */
.pull--one-twelfth {
  right: 8.333%;
}

.pull--five-twelfths {
  right: 41.666%;
}

.pull--seven-twelfths {
  right: 58.333%;
}

.pull--eleven-twelfths {
  right: 91.666%;
}

/* endif */
/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesn’t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.fl` class to the markup.
 */
.fr {
  float: right;
}

.fl {
  float: left;
}

.text-center,
.text-centre {
  text-align: center;
}

/**
 * Pull items full width of `.island` parents.
 */
.full-bleed {
  margin-right: -24px;
  margin-left: -24px;
}
.islet .full-bleed {
  margin-right: -12px;
  margin-left: -12px;
}

/**
 * Add a help cursor to any element that gives the user extra information on
 * `:hover`.
 */
.informative {
  cursor: help;
}

/**
 * Mute an object by reducing its opacity.
 */
.muted {
  opacity: 0.5;
  filter: alpha(opacity=50);
}

/**
 * Align items to the right where they imply progression/movement forward, e.g.:
 * 
   <p class=proceed><a href=#>Read more...</a></p>
 * 
 */
.proceed {
  text-align: right;
}

/**
 * Add a right-angled quote to links that imply movement, e.g.:
 * 
   <a href=# class=go>Read more</a>
 * 
 */
.go:after {
  content: " »";
}

/**
 * Apply capital case to an element (usually a `strong`).
 */
.caps {
  text-transform: uppercase;
}

/**
 * Hide content off-screen without resorting to `display:none;`
 */
.accessibility {
  position: absolute;
  left: -99999px;
}

[dir=rtl] .accessibility {
  left: auto;
  right: -99999px;
}

/**
 * Hide content based on breakpoint
 */
.hide {
  position: absolute;
  left: -9999px;
}

@media only screen and (max-width: 480px) {
  .hide--palm {
    position: absolute;
    left: -9999px;
  }
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  .hide--lap {
    position: absolute;
    left: -9999px;
  }
}
@media only screen and (max-width: 1023px) {
  .hide--portable {
    position: absolute;
    left: -9999px;
  }
}
@media only screen and (min-width: 1024px) {
  .hide--desk {
    position: absolute;
    left: -9999px;
  }
}
/* endif */
/**
 * She’s all yours, cap’n... Begin importing your stuff here.
 */
